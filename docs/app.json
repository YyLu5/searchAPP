[{"name":"app.R","content":"library(shiny)\r\nlibrary(readxl)\r\nlibrary(dplyr)\r\nlibrary(DT)\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Editor Search and Management\"),\r\n  tabsetPanel(\r\n    tabPanel(\"Search Editors\",\r\n             sidebarLayout(\r\n               sidebarPanel(\r\n                 # Removed the file input\r\n                 textInput(\"searchName\", \"Search by Editor's Name:\"),\r\n                 textInput(\"searchExpertise\", \"Search by Expertise:\"),\r\n                 actionButton(\"search\", \"Search\")\r\n               ),\r\n               mainPanel(\r\n                 tableOutput(\"results\")\r\n               )\r\n             )),\r\n    tabPanel(\"Review Data\",\r\n             sidebarLayout(\r\n               sidebarPanel(\r\n                 h4(\"Review the contents\")\r\n               ),\r\n               mainPanel(\r\n                 DTOutput(\"tableContents\")\r\n               )\r\n             ))\r\n  )\r\n)\r\n\r\nserver <- function(input, output) {\r\n  # Read data at app startup\r\n  data <- read.csv(\"Editor_data.csv\", stringsAsFactors = FALSE)\r\n  colnames(data) <- tolower(colnames(data))\r\n  \r\n  # Function to perform the search\r\n  observeEvent(input$search, {\r\n    searchResults <- data\r\n    if (input$searchName != \"\") {\r\n      searchResults <- searchResults[grep(input$searchName, searchResults$name, ignore.case = TRUE),]\r\n    }\r\n    if (input$searchExpertise != \"\") {\r\n      expertisePattern <- paste0(\"\\\\b\", input$searchExpertise, \"\\\\b\")\r\n      searchResults <- searchResults[sapply(searchResults$expertise, function(exp) {\r\n        any(grepl(expertisePattern, unlist(strsplit(exp, \",\\\\s*\")), ignore.case = TRUE))\r\n      }),]\r\n    }\r\n    output$results <- renderTable(searchResults)\r\n  })\r\n  \r\n  # Render the table for reviewing data\r\n  output$tableContents <- renderDT({\r\n    datatable(data, options = list(pageLength = 10, scrollX = TRUE))\r\n  })\r\n}\r\n\r\nshinyApp(ui, server)\r\n","type":"text"},{"name":"Editor_data.csv","content":"Name,email,expertise\r\nEB member A,email 1,\"asthma, proteomics, metagenomics\"\r\nEB member B,email 2,\"ILD, metabolomics , metagenomics\"\r\nEB member C,email 3,\"critical care, health services, genomics\"\r\nEB member D,email 4,\"pediatrics, TB\"\r\nEB member E,email 5,\"TB, single cell\"\r\nEB member F,email 6,\"single cell, fibrosis\"\r\nEB member G,email 7,\"animal model, microbiome\"\r\nEB member H,email 8,\"microbiome, metabolomics , metagenomics, ILD, asthma, copd\"\r\nEB member I,email 9,critical care\r\nEB member J,email 10,\"copd, proteomics , metagenomics\"\r\nEB member K,email 11,\"pediatrics, critical care\"\r\nEB member L,email 12,\"single cell, copd\"\r\nEB member M,email 13,critical care\r\nEB member N,email 14,bronchiectasis\r\nEB member O,email 15,\"bacterial, genomics, informatics\"\r\nEB member P,email 16,\"fibrosis, ILD, metagenomics\"\r\nEB member Q,email 17,critical care\r\nEB member R,email 18,\"critical care, genomics, ILD, health services, proteomics\"\r\nEB member S,email 19,bronchiectasis\r\nEB member T,email 20,\"metagenomics, TB, single cell\"\r\nEB member U,email 21,critical care\r\nEB member V,email 22,\"copd, metagenomics, proteomics, microbiome, asthma\"\r\nEB member W,email 23,\"metabolomics, microbiome, asthma\"\r\nEB member X,email 24,\"fibrosis, ILD, metagenomics, health services, critical care\"\r\nEB member Y,email 25,critical care\r\nEB member Z,email 26,\"metabolomics, microbiome, asthma\"\r\n","type":"text"}]
